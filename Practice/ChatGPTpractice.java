import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

class Product {
    private String name;
    private String category;
    private double price;
    private int quantitySold;

    // Constructor
    public Product(String name, String category, double price, int quantitySold) {
        this.name = name;
        this.category = category;
        this.price = price;
        this.quantitySold = quantitySold;
    }

    // Getters and setters
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getCategory() {
        return category;
    }

    public void setCategory(String category) {
        this.category = category;
    }

    public double getPrice() {
        return price;
    }

    public void setPrice(double price) {
        this.price = price;
    }

    public int getQuantitySold() {
        return quantitySold;
    }

    public void setQuantitySold(int quantitySold) {
        this.quantitySold = quantitySold;
    }

    // toString method for printing
    @Override
    public String toString() {
        return "Product{" +
                "name='" + name + '\'' +
                ", category='" + category + '\'' +
                ", price=" + price +
                ", quantitySold=" + quantitySold +
                '}';
    }
}

public class ChatGPTpractice {
    public static void main(String[] args) {
        List<Product> products = new ArrayList<>();
        products.add(new Product("Laptop", "Electronics", 1000, 50));
        products.add(new Product("Smartphone", "Electronics", 700, 100));
        products.add(new Product("Shoes", "Fashion", 80, 200));
        products.add(new Product("Watch", "Fashion", 150, 150));
        
        // Filter products in the "Electronics" category
        List<Product> electronicsProducts = products.stream()
                                                    .filter(product -> product.getCategory().equals("Electronics")).collect(Collectors.toList());
        System.out.println("Electronics Products: ");
        electronicsProducts.forEach(System.out::println);
        
        //Calculate total revenue generated by each product
        Map<String, Double> productRevenueMap = products.stream().collect(Collectors.toMap(product -> product.getName(), product -> product.getPrice() * product.getQuantitySold()));
        System.out.println("\nRevenue Generated by Each Product:");
        productRevenueMap.forEach((productName, revenue) -> System.out.println(productName + ": $"+ revenue));
        
    }
}

